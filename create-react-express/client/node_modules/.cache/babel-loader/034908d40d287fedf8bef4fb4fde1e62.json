{"ast":null,"code":"import _slicedToArray from \"/Users/markpascua1012/Documents/Project-3/create-react-express/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/markpascua1012/Documents/Project-3/create-react-express/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/markpascua1012/Documents/Project-3/create-react-express/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/markpascua1012/Documents/Project-3/create-react-express/client/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { SET_CURRENT_USER, LOADING } from \"./actions\";\nvar StoreContext = createContext();\nvar Provider = StoreContext.Provider;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        currentUser: action.user,\n        loading: false\n      });\n\n    case LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [] : _ref$value,\n      props = _objectWithoutProperties(_ref, [\"value\"]);\n\n  var _useReducer = useReducer(reducer, {\n    currentUser: null,\n    loading: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nvar useStoreContext = function useStoreContext() {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/markpascua1012/Documents/Project-3/create-react-express/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","SET_CURRENT_USER","LOADING","StoreContext","Provider","reducer","state","action","type","currentUser","user","loading","StoreProvider","value","props","dispatch","useStoreContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SACIC,gBADJ,EAEIC,OAFJ,QAGO,WAHP;AAKA,IAAMC,YAAY,GAAGL,aAAa,EAAlC;IACQM,Q,GAAaD,Y,CAAbC,Q;;AAGR,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,gBAAL;AACI,+BACOK,KADP;AAEIG,QAAAA,WAAW,EAAEF,MAAM,CAACG,IAFxB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKT,OAAL;AACI,+BACOI,KADP;AAEIK,QAAAA,OAAO,EAAE;AAFb;;AAKJ;AACI,aAAOL,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,OAA8B;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAZC,KAAY;;AAAA,oBACtBf,UAAU,CAACM,OAAD,EAAU;AAC1CI,IAAAA,WAAW,EAAE,IAD6B;AAE1CE,IAAAA,OAAO,EAAE;AAFiC,GAAV,CADY;AAAA;AAAA,MACzCL,KADyC;AAAA,MAClCS,QADkC;;AAMhD,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACT,KAAD,EAAQS,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAPD;;AASA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,SAAOhB,UAAU,CAACG,YAAD,CAAjB;AACH,CAFD;;AAIA,SAASS,aAAT,EAAwBI,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n    SET_CURRENT_USER,\n    LOADING\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: action.user,\n                loading: false\n            };\n        case LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        currentUser: null,\n        loading: false\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}